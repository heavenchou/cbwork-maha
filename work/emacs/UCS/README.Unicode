--------------------------------------------------------------
Unicode definition on Mule-UCS(Universal enCoding System)
        API and configuration manual.

        Written by Miyashita Hisashi (himi@bird.scphys.kyoto-u.ac.jp)

	reviced on 1999/11/10.
--------------------------------------------------------------

o ... License

  Mule-UCS is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

  You should have received a copy of the GNU General Public License
along with Mule-UCS; see the file COPYING.  If not, write to
the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.

o ... Introduction

  Mule-UCS is NOT dependent on Unicode itself at all.
This manual describes unicode definition in this package.

  Mule-UCS realizes Unicode encoding/decoding by unicode.el,
un-data.el, utf.el, un-trbase.el, and un-define.el.
unicode.el is a main part and defines fundamental type on Unicode
translation.  When it is required at run-time, it will be automatically
loaded.  un-data.el, utf.el, and un-trbase.el define
conversions and translations at byte-compiling time.
Normally, they are not necessary at run-time.
un-define.el controls default configuration and set up the run-time
environment.  It is indispensable module at run-time.
Mule-UCS embed all information required at least for setup
into un-define.elc.
Threfore, you only have to load it at the startup.
un-define.el automatically loads other modules if necessary.

  Mule-UCS Unicode definition(MULE-UCS-Unicode hereafter) provides
various coding-systems for external representaions and some APIs
for other Emacs Lisp Library.

  Currently, un-tools.el is only for feeble autodetection on UTF-8/16.
You don't need this module on Mule 4.1 or later.  This Mule feature
have more powerful built-in autodetection on UTF-8/16.

  After all, minimum configuration of your .emacs, site-start.el, or
any other start up configuration is only one line as below.
---
(require 'un-define)
---

o ... Instruction.

(1) basic features.

   o ... Configured coding systems

	un-define.el defines the following coding-systems

	(A) ... UTF-8 category.

           utf-8, utf-8-unix, utf-8-dos, utf-8-mac.

        UTF-8 coding system.  These differ as to Line Terminator.
        utf-8 means line terminator is undetermined on decoding
	and is LF on encoding.
	utf-8-unix means line terminator is LF.
	utf-8-dos means line terminator is CR+LF.
	utf-8-mac means line terminator is CR.

	   utf-8-ws, utf-8-ws-unix, utf-8-ws-dos, utf-8-ws-mac.

        These are basically identical to utf-8-* coding-systems,
	but these encoder adds UTF-8 signature at the head.

	(B) ... UTF-16 category.

        One element of UTF-16 is 2 octets.  However, its byte-order is
        not fixed.  Hence, we need 2 sorts of coding-systems, big endian
	and little endian.
        And all encoding format and syntax on UTF-16 is defined by The
	Unicode Standard(#1).  To begin with, the term UTF-16 was introduced
        by ISO/IEC 10646 amendment.  UTF-16 is implemented in order to have
        compatibility with The Unicode Standard Version 2.0 in encoding format.
        Therefore, we have to follow The Unicode Standard when implementing
        UTF-16.   As a result, the line terminator of utf-16-le and utf-16-be
        is Unicode Line Separator(U+2028) instead of convensional forms:
        LF, CRLF, and CR.  However, coding-systems of convensional forms are also
	predefined.  Thus, you will not feel inconvinience on line terminator.
        But you have to take consideration to autodetection on line terminator.


           utf-16-le, utf-16-le-unix, utf-16-le-dos, utf-16-le-mac

	UTF-16 coding system.  These byte-order is little endian.
        utf-16-le means line terminator is undetermined on decoding
	and is U+2028 on encoding.
	utf-16-le-unix means line terminator is LF.
	utf-16-le-dos means line terminator is CR+LF.
	utf-16-le-mac means line terminator is CR.
        
           utf-16-be, utf-16-be-unix, utf-16-be-dos, utf-16-be-mac

	UTF-16 coding system.  These byte-order is Big Endian.
        Other features are identical to utf-16-le-*.

	(C) ... UTF-7 category.

	UTF-7 is a strange transformation format.
	This is 7bit stream, and avoids to use unsafe characters on
	RFC822 format.  For detail, please refer to RFC1642.
	All utf-7 coding systems supported by Mule-UCS-Unicode
	encode UTF-16 format.
	In other words, they can encode all codepoints defined by
	The Unicode Standard Version 2.0.

	utf-7, utf-7-unix, utf-7-dos, utf-7-mac

	UTF-7 coding system.  	
        utf-7 means line terminator is undetermined on decoding
	and is LF on encoding.
	utf-7-unix means line terminator is LF.
	utf-7-dos means line terminator is CR+LF.
	utf-7-mac means line terminator is CR.
	These coding systems encode Set O characters directly.

	utf-7-safe, utf-7-safe-unix, utf-7-safe-dos, utf-7-safe-mac

	These coding systems encodes Set O characters
	with shifted format.
        Other features are identical to utf-7-*.

   o ... defined Emacs Lisp functions.

       Hereafeter, we use CHARACTER for data type.
       Because characters are represented by numbers on Emacs,
       CHARACTER is identical to NUMBER.  But on XEmacs, because
       character is first-class object, CHARACTER is not identical
       to NUMBER.   Therefore, I use CHARACTER to represent character
       data type.

       - Function: ucs-to-char NUMBER

           This function retrieves a character from UCS codepoint.
        This conversion is dealt by unicode-codepoint-to-character,
	whose translation rule is specified by unicode-basic-translation-rule.

       - Function: char-to-ucs CHARACTER
  
           This function retrieves a UCS codepointr from a character
        This conversion is dealt by unicode-character-to-codepoint,
	whose translation rule is specified by unicode-basic-translation-rule.

       - Command: insert-ucs-character NUMBER

           Insert a character specified by UCS codepoint.
       This command uses the above ucs-to-char function, and if it
       successes to retrieve a character from the given UCS codepoint,
       insert it to the current buffer.  If it fails, cause an error.
       e.g.
        If you want to insert U+4E00, do `M-x insert-ucs-character',
	then input `?\x4E00'(without any quotations).

   o ... Simple dynamic modification function.

	Mule-UCS have dynamic modification features.
	Owing to it, predefined translations (but they must be declared as a
	`dynamic translation' beforehand) can be modified dynamically at run-time.
	By using this feature, Mule-UCS-Unicode provides a simple function to
	change priority to convert between internal characters and UCS characters.
	However, because of simplicity, this function supports a narrow range of
	facility on dynamic modification features.
	If you want to make the most of dynamic modification features,
	call directly TAE APIs.

	- Function: un-define-change-charset-order &optional LIST

	Change conversion priority of charsets.
	LIST must be a list of charsets ordered by priority.
	If LIST is nil or omitted,
	unicode-basic-translation-charset-order-list is used
	as a order list.
	By following this order, Mule-UCS-Unicode encodes
	internal characters or decodes UCS characters.
	

(1) advanced features.

    o... Font encoder

	Mule-UCS-Unicode supports font encoder for Unicode.
	By loading un-define.el, 'unicode-font-encoder is set up,
	And it is associated to "iso10646" fonts when your Emacs uses
	XLFD to set up font name.  (On the contrary, because Meadow
	does not use XLFD directly to set up fontset, this association is
	not used.)  Such associations are specified in font-ccl-encoder-alist.

	Sample configurations for setting up Unicode encoding fonts in your fontset
	are as below:
---
	(set-fontset-font "<FONTSET NAME>"
		          '<CHARSET SYMBOL>
		          "*-iso10646-*")
---
	<FONTSET NAME> is a fontset name, and "fontset-standard" is a
	default fontset created at start up of Emacs.
	<CHARSET SYMBOL> must be a symbol of the mule charset that is displayed
	by an Unicode encoding font.
	For example, the below configuration,
---
	(set-fontset-font "fontset-standard"
		          'latin-iso8859-1
		          "*-iso10646-*")
	(set-fontset-font "fontset-standard"
		          'cyrillic-iso8859-5
		          "*-iso10646-*")
---
	set Unicode encoding fonts to "fontset-standard" to display
	latin-iso8859-1 and cyrillic-iso6659-5 characters.

	More simple and easy configuration is setting x-charset-registry
	to charsets displayed by Unicode encoding fonts as below.
---
	(put-charset-property 'latin-iso8859-1 
		              'x-charset-registry "iso10646")
	(put-charset-property 'cyrillic-iso8859-5
                              'x-charset-registry "iso10646")
	(create-fontset-from-fontset-spec
         "<YOUR FONTSET SPEC")
---
	<YOUR FONTSET SPEC> specifies spec. of fonts by XLFD, e.g.
	"*-fixed-medium-r-normal-*-16-*-*-*-*-*-fontset-standard"
	if you use 16 dot fixed font.

----------
        To be continued...:-)

